{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "0c0aF8EE1rZB"
      },
      "source": [
        "ORIENTAÇÃO A OBJETOS"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "KNihprpz1xfZ"
      },
      "outputs": [],
      "source": [
        "class ContaCorrente:\n",
        "  # método(função) construtor: cria os atributos\n",
        "  def __init__(self, numero, titular, saldo = 0, limite = 1000):\n",
        "    self.__saldo = saldo\n",
        "    self.__titular = titular\n",
        "    self.__limite = limite\n",
        "    self.__numero = numero\n",
        "\n",
        "  # métodos -> coisas que a classe faz\n",
        "  # servem para manipular os atributos\n",
        "  def sacar(self, valor):\n",
        "    self.__saldo -= valor\n",
        "    # self.saldo = self.saldo - valor\n",
        "\n",
        "  def depositar(self, valor):\n",
        "    self.__saldo += valor\n",
        "    # self.__saldo = self.__saldo + valor\n",
        "\n",
        "  def emitirSaldo(self):\n",
        "    print(self.__saldo)\n",
        "\n",
        "  def emitirLimite(self):\n",
        "    print(self.__limite)\n",
        "\n",
        "  def infoConta(self):\n",
        "    print('Titular: {} Saldo: {} Limite: {} '.format(self.__titular,self.__saldo, self.__limite))\n",
        "\n",
        "  def transferir(self, valor, destino):\n",
        "    self.sacar(valor)\n",
        "    destino.depositar(valor)\n",
        "\n",
        "\n"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "tqsxlzkt2BaT"
      },
      "outputs": [],
      "source": [
        "conta1 = ContaCorrente(123,'Rodrigo Maciel') # instãncia da classe: criação do objeto conta1\n",
        "# conta1 = ContaCorrente(123,'Rodrigo Maciel', 200) # instãncia da classe: criação do objeto conta1"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "1GWqUFEz7ZVR"
      },
      "outputs": [],
      "source": [
        "conta1.sacar(100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "ys9iyJwsphSJ",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "5cd8d603-43cf-41c6-9ef4-33092b44304c"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "Titular: Rodrigo Maciel Saldo: 0 Limite: 1000 \n"
          ]
        }
      ],
      "source": [
        "conta1.infoConta()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "aNGiWjfN60Z9",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "77a64022-e9b4-4aa3-a42a-17073e4a4441"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "600\n"
          ]
        }
      ],
      "source": [
        "conta1.emitirSaldo()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "yVoX9RCP-1Gb"
      },
      "outputs": [],
      "source": [
        "conta1.depositar(600)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "PA3xBLdN_I_M",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "1230ca7e-44ba-4da4-d407-4a8e3572d1d7"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "300\n"
          ]
        }
      ],
      "source": [
        "conta1.emitirSaldo()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "WggOaQYP2ZQb"
      },
      "outputs": [],
      "source": [
        "conta2 = ContaCorrente(456,'Maria')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "mcZPtQcfofb5"
      },
      "outputs": [],
      "source": [
        "conta2.depositar(100)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "Dm4i9IacxTx-",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9fa5f2e2-1e96-442e-84c0-2f157878f742"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "100\n"
          ]
        }
      ],
      "source": [
        "conta2.emitirSaldo()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "id": "og3DYd-5xVtP"
      },
      "outputs": [],
      "source": [
        "conta1.transferir(200, conta2)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "conta2.transferir(200,conta1)"
      ],
      "metadata": {
        "id": "7YjZ1lG1r7O5"
      },
      "execution_count": null,
      "outputs": []
    }
  ],
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "display_name": "Python 3",
      "name": "python3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 0
}
